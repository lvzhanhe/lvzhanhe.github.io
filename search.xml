<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Intelligent virtual assistant]]></title>
    <url>%2F2017%2F11%2F04%2FIntelligent-virtual-assistant%2F</url>
    <content type="text"><![CDATA[Intelligent virtual assistant, also known as conversationalinterfaces, digital assistants, or chat bots, enables people to converse with amachine in a dialogic fashion, using natural language. It works whereverthere is digital-based communication. Some popular virtual assistants like Apple’sSiri, Microsoft’s Cortana, Amazon’s Alexa, Google’s Now assistant, are highly appreciatedby users for their efficiency and multifunction. In this essay, I willintroduce how make a virtual assistant become intelligent, by mentioning its conversationengine architecture and supporting technologies. Three types of tasksFirst of all, the virtual assistant should clearly classify what kind of task it is facing. From general knowledge to specific, we divide conversations which intelligent virtual assistant will tackle into three types. The firsttype is general conversation. There is no specific objective during a general conversation, just like a chit chat. Most users carry out such form of conversation for fun, or in other words, to pass their time. The second type is about information and answers. It generally contains just one turn, a question and an answer. The objective of this kind of conversation is providing information. The last one is task-oriented dialogue. For instance, when one walks into a grocery store, the salesclerk will ask the customer a series of purposeful questions. “What can I get for you?” “Anything else?” “Do you have a loyalty card?” This conversation ends until the customer get what he or she want. These three skills above are three of the most important skills we have in researching man-machine conversations. Pattern matchersThere are complicated architectures inside an intelligent virtual assistant. The way called “pattern matchers” is the simplest one to produce output according to input. Intelligent virtual assistant can learn from the internet. It first scans on the internet. Then extract pairs of sentences to form its own corpus. After creating its own knowledge system, when a sentence is entered, the virtual assistant will match this sentence to what it got from the internet. The highest matched sentence will be the key to find the response. Such way is sometimes efficient but is kind of stock and may give us some ambiguous returns. To value and optimize each answer, we have algorithms and neural networks. AlgorithmsTo execute the process algorithmically, one or a set of equations are needed. Every sentence in the corpus now has been classified to one certain class. When a sentence is entered, according to each word, a score will be assigned to a class. This score is different in different situations.For instance, personal pronouns like “I”, “you”, “we”, or prepositions like“in”, “on”, “at” has less weights than some words which have real meaning. The class who holds the highest value will be taken into account after a series ofcalculations. A lot of conversation engine now make use of this classification method. However, logic issue is a huge obstacle to overcome. When there is a word “not” in the sentence, the conversation engine will be confused of what this negation refers to. Then causing disorder in the process of assignment of scores. Thus, a score does not mean probability but how well the questionand answer match. Neural networkArtificial neural network is the most efficient and intelligent way to produce the output, because it is a non-linear learner. It is a form of connectionism which inspired by biological neural networks ofanimal brains, invented in 1940’s. Multiple level artificial neural networkexists between the input layer and the output layer. One kind of common neuralnetwork is called Convolutional Neural Network. It appears like a small window, each window intercepts a certain amount of information, and extracted out to do convolution. Each term of convolution returns a value, which will be used for further computation. Another common neural network is 2D Convolutional Neural Network. Different from the first one, in 2D Convolutional Neural Network, the small window slides and intercepts information in a 2D range. The third one is Recurrent Neural Network. It refers to the process of a sequence of strings. The output of any position is restricted by information in the position of the previous position or the previous state, which is called hidden state. It helps predict the input probability of each word. Multi-turn conversationWhen a virtual assistant is dealing with a multi-turn conversation, the engine will no longer focus on the current input. What it does is to keep track of what user said previously. Thus, every sentence willbe encoded. Then each code will reflect the information of the entiresentence. The engine interprets the input by using Attention model. Attention model helps the answer-generation process go with the target and helps the engine better understand the user. Technologies today have made the virtual assistant much more intelligent. Intelligent virtual assistant has reached to a wide range of users and been applied to different fields. Scientists are still working hard inorder to bring it more fantastic features.]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>Chat bot</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to turn up system volume during a FaceTime call]]></title>
    <url>%2F2017%2F09%2F30%2Ffacetime%2F</url>
    <content type="text"><![CDATA[People who are using Mac OS may find that system volume is extremely low during a FaceTime call. It dulls every other sound. Here are two esay steps to solve this problem. Step 1Open FaceTime and do step 2 before you make a call. Step 2Launch the terminal and enter the command below: 1➜ ~ printf &quot;p *(char*)(void(*)())AudioDeviceDuck=0xc3\nq&quot; | lldb -n FaceTime The same as other applications. Just replace FaceTime with your application name!]]></content>
      <categories>
        <category>Terminal</category>
      </categories>
      <tags>
        <tag>Terminal</tag>
        <tag>Unix</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2 Easy Steps to Extract .rar Files]]></title>
    <url>%2F2017%2F09%2F02%2Funrar%2F</url>
    <content type="text"><![CDATA[We always need to extract .rar files in order to get the stuff inside. However, unlike .zip files, macOS and OS X does not include a built-in archive utility tool that opens .rar files. So, here is a good and convenient way for you. Step 1Install unrar by using Homebrew. (Infos about Homebrew can be found here) 1➜ ~ brew install unrar Step 2Go to the directory where you save the .rar file. Then type the command below.1➜ ~ unrar x [filename.rar] Then you’ll get what you want!]]></content>
      <categories>
        <category>Terminal</category>
      </categories>
      <tags>
        <tag>Terminal</tag>
        <tag>Unix</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Basic Unix Commands (2)]]></title>
    <url>%2F2017%2F08%2F31%2Fcommand2%2F</url>
    <content type="text"><![CDATA[cpcp [file] [dirname]: Copy a single file to a target directory. If the file has been existed in the directory, you will be asked to confirm the replacement. cp -a [file] [dirname]: The parameter -a and preserve the specified attributes. touchtouch [file]: Create a file. touch [file1] [file2]: Create files. touch -t 201211234343.90 [file]: Create a file and set its timestamp. 123➜ ~ touch -t 201211234343.90 log1.log➜ ~ ll *.log-rw-r--r-- 1 lyuZhanhe staff 0B Nov 24 2012 log1.log touch -r [file1] [file2]: Update the timestemp of file1 to the same as file2. catIt is used to display the content of a file or link several files together or create new one. However, it cannot edit existing files. cat [file]: Display the content of a file. If you specify more than one file name, cat will display those files one after the other. 12➜ Desktop cat hello.mdhello world!% cat -n [file]: Number all the output lines . 1234➜ Desktop cat -n h1.md 1 line 1 2 line 2 3 lin3 3% cat [file1] &gt; [file2]: Copy the content in [file1] to [file2]. 1➜ Desktop cat h1.md &gt; h2.md cat [file1] &gt;&gt; [file2]: Append the content in [file1] to [file2]. 1➜ Desktop cat h1.md &gt;&gt; h2.md An example: We use cat to catenate output text to the file’s contents. 12345➜ Desktop echo &quot;My Classes:&quot; | cat - list.txtMy Classes:mathbiologyphysics findfind ~ -name &quot;*.log&quot; -print: Find all the .log files in the root directory and print the result. find . -name &quot;*.log&quot; -print: Find all the .log files in the current directory and print the result. find -atime -[n]: Find all the files which have been accessed in n days.]]></content>
      <categories>
        <category>Terminal</category>
      </categories>
      <tags>
        <tag>Terminal</tag>
        <tag>Linux</tag>
        <tag>Unix</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Web Crawler in Python]]></title>
    <url>%2F2017%2F08%2F07%2FWeb-Crawler-in-Python%2F</url>
    <content type="text"><![CDATA[Search engines like Google, Bin, and Yahoo have become an irreplaceable tool of human life today. They filter information and retrieve data, helping people find what they want. However, it is not so familiar to people how search engines work. Actually, the main part of them is web Crawler (also called Spider), which is heavily used in today’s technologies. They are used to get specific information on web pages and do further operations. Why python?As we can find, nowadays, most of web crawlers are based on Python. Lots of people may be curious about why it is Python. Actually, other languages like PHP, Java, C++, can also implement similar functions. However, Python has many advantages over them. First of all, Python has great HTTP libraries and HTML parsers. A basic one used to do this is “request”. An advanced one is “Beautiful Soup” (Mike 06), which is designed as a top of popular Python parsers like lxml. Furthermore, there are a lot of useful frameworks off the shelf. For instance, Tornado can support the I/O (input or output) from being blocked. Besides, Scrapy is a good one to build a scalable and distributed crawler. These will make developing period easier and more efficient. Therefore, it is safe to conclude that Python is a good choice for developing a web crawler. How does it work?The basic mechanism of web crawler is not complicated. Web crawler scans the web, reading specific data which has been set previously. It may start with some popular sites which have higher hits. Then it can spread through the internet by finding the related link within the sites. The crawler turns its finding to a giant index (Paul 05). In this giant index, it contains a great deal of data which meet requirements. A case in point, when a word “engineer” is entered in a search engine, it will check the whole index, then provide items related to “engineer”. Web crawler scan the web regularly to make sure its information is up to date. It sounds like an easy process. However, in order to acquire and then provide both accurate and reliable information, there are further steps to do (Vural 03). Web crawler should not only know what they get, but should also recognize where they get this data. It is extremely vital in practical application. For instance, a word appears in “heading” is more appropriate that which appears in “context”. For another, when one search in a video website, it will return particular information like name, singer, album. These are all related staff surrounding key words. Besides, there are always complicated algorithms based on the content of index. Essentially, these are equations to value and rate results coded by programmers. How to make a crawler?A python editor and a python environment are required to encode and implement a crawler program. Basically, the module called urllib is used to open a link in python program and return a HTML file.( Wael 03) The argument is just like page = urllib.request.urlopen(url, data, timeout). Initialing a variable for the link is recommended, since there are always further algorithms on it. The first parameter is the link, the second parameter is data need to be transported in this process, the final one is setting timeout. After that, the main task is to find useful information in that file. For example, specific data can be found by locating specific label name. The argument is like start_link = page.find(“&lt;span class = ‘title’&gt;”). Sometimes the data found just used to print in a python console. In order to be printed friendly, some small changes should be replaced. For instance, &lt;br&gt; should be replaced with &lt;\t&gt;. However, sometimes the data need to be stored in local file system by using the function urllib.urlretrieve() and a loop if necessary. In some dynamic websites, the data need to be transported to another page, like login page (Kristopher 05). At this point, there are two data transfer functions called get and post. For the function get, it transfers the data by creating a new url containing the data. And for the function post, it transfers by creating a dictionary containing different parameters. What’s it used for？Apart from the search engine mentioned in the beginning, there are a great number of projects can be achieved by using web crawler. There is an interesting example given by Emily L, a graduate student at Harvard University. Some programmers used web crawler to dig out what is the most common time for people to sleep. Since most people would like to post something like “I need to sleep” before they get to bed, the web crawler will scan through Twitter how many times the word “sleep” appeared in successive time intervals. Then it stores the data and presents it friendly as a diagram. Works citedThelwall, Mike. “A Web Crawler Design for DataMining.” vol. 27, SAGE Publications, Inc, Thousand Oaks, CA, 2011;2001;,doi:10.1177/016555150102700503. Gab–Allah, Wael A., Ben Bella S. Tawfik, and Hamed M.Nassar. “An Ontology Based Crawler for Retrieving Information Distributedon the Web.” International Journal of Engineering Research andApplications, vol. 6, no. 6, 2016, pp. 57-63. Jones, Kristopher B. Search Engine Optimization: Your VisualBlueprint for Effective Internet Marketing. Wiley, Indianapolis, IN, 2008. Zandbergen, Paul A. Python Scripting for ArcGIS. ESRI Press,New York, 2013;2015;.]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Crawler</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Basic Unix Commands (1)]]></title>
    <url>%2F2017%2F07%2F19%2Fcommand1%2F</url>
    <content type="text"><![CDATA[Terminal provides a command line interface to control the UNIX-based operating system. Here’s something important you need to know about Terminal, and what it can do for you. pwdpwd is short for “print working directory”. It outputs the path of your current working directory. If you get lost, pwd can tell you where you are. 12➜ ~ pwd/Users/LyuZhanhe lsThe ls command outputs the names of all of the folders and files in the working directory. ls is short for “list” (as in “list” the contents). Folder names end with a /, file names do not. Some terminals also add colorized output to ls to denote different types of files. For instance, Mimir’s terminal has folders in blue, and files in white. 1234➜ ~ lsApplications Music PublicDesktop PhpstormProjects DownloadsDocuments Pictures iCloud Drive ls -l -R Desktop: List all the files on the desktop. -l, -R are parameters, and also can be written as -IR. -l means including details like permissions, owner, file size. -Rmeans including its subdirectories. You can find more parameters here. ls d**: List all the files whose names begin with ‘d’. ls -a: Show hidden files. cdThe cd command is short for “change directory”. It allows you to change your working directory to some different folder. cd ../: Go up one level. 123➜ ~ cd Desktop➜ Desktop cd ../➜ ~ mkdirmkdir [dir name]: Create a new directory. mkdir -p dir_1/dir_2: ‘p’ is short for parent. If dir_1 exists in your current working directory, create dir_2 in it. If not, create dir_1, then create dir_2 in it. 12345➜ Desktop mkdir test➜ Desktop mkdir test/test1➜ Desktop cd test➜ test lstest1 mkdir -m 777 dir_3: Create a directory named ‘dir_3’. It can be read, write and execute by any user. mkdir -m [xxx] dir_4: The first digit represents the owner, the second represents the group and the third represents other users. The number 7 represents all three types of permission (i.e., read, write and execute), 6 stands for read and write only, 5 is read and execute, 4 is read only, 3 is write and execute, 2 is write only, 1 is execute only and 0 is no permission. mkdir -v dir_5: Create a new directory. Also explain what it has done in the terminal, e.g. ‘mkdir: created directory ‘test3’’. 123➜ test mkdir -m 343 test2➜ test mkdir -v test3mkdir: created directory &apos;test3&apos; rmrm [file name]: Delete a file. You will be asked to confirm the operation. rm -f [file name]: Forcibly delete the file, the system no longer prompt. rm *.log: Delete all .log files, delete one by one before asking to confirm. 1234567891011➜ test lsREADME.md README1.md README2.md README3.md test1 test2 test3➜ test rm README.md➜ test lsREADME1.md README2.md README3.md test1 test2 test3➜ test rm -f README1.md➜ test lsREADME2.md README3.md test1 test2 test3➜ test rm *.md➜ test lstest1 test2 test3 rmdirrmdir [dirname]: Remove directory (only operates on empty directories). rmdir -p [dirname]: When the subdirectory is deleted so that its parent has become an empty directory, then also delete the parent. 12345678➜ test rmdir test1rmdir: test1: Directory not empty➜ test rmdir test2➜ test lstest1 test3➜ test rmdir -p test3/test4➜ test lstest1 mvmv [file] [new filename]: Rename a file. mv [file] [dirname]: Move a source file to a directory. mv [file1] [file2] [dirname]: Move a few files to a same directory. 1234567891011121314151617➜ test ls -Rtest1 test2./test1:README.md README1.md README2.md./test2:➜ test cd test1➜ test1 mv README.md README1.md README2.md ../test2➜ test1 cd ../➜ test ls -Rtest1 test2./test1:./test2:README.md README1.md README2.md mv -i [file1] [file2]: Rename file1 to file2. If file2 doesn’t exist, prompt before overwriting. mv -f [file1] [file2]: Rename file1 to file2. Do not prompt before overwriting existing files. Please be careful when using it. mv [dir1] [dir2]: Move dir1 to dir2. If dir2 doesn’t exist, rename dir1 to dir2. mv * ../: Move all files under the current folder to the parent directory. mv [dir1]/* [dir2]: Move the files in dir1 to dir2.]]></content>
      <categories>
        <category>Terminal</category>
      </categories>
      <tags>
        <tag>Terminal</tag>
        <tag>Linux</tag>
        <tag>Unix</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F07%2F15%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Hi there! It’s Zhanhe :) WelcomeWelcome to my blog! This is my very first post. What is it?This blog is powered by Hexo and use the theme - NexT.Pisces. Generally, I will share what I am learning and researching or maybe what happened in my life. How to reach me?Feel free to share your feedback or ideas with me. Here’re some ways to reach me: Comment anything you want under a post. My email: zhanhe0827@gmail.com Github: https://github.com/lvzhanhe]]></content>
      <tags>
        <tag>About</tag>
      </tags>
  </entry>
</search>